name: "Build with NPM"
inputs:
  token:
    description: "Github Token"
    required: true
  app-type:
    description: "spring-boot | npm-ui-lib"
    required: false
  sentry-token:
    description: "Sentry Auth Token"
    required: false
  sentry-org:
    description: "Sentry Organization Name"
    required: false
  sentry-project:
    description: "Sentry Project Name"
    required: false
  with-storybook:
    description: "true | false"
    required: false
runs:
  using: "composite"
  steps:
    - name: Set up NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18.16.1
        registry-url: "https://npm.pkg.github.com"

    - name: Hash Pom
      shell: bash
      run: echo "PACKAGE_LOCK_FILE_HASH=$(tail -n +10 package-lock.json | sha1sum | head -c 40)" >> $GITHUB_ENV

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          ${{ steps.npm-cache-dir.outputs.dir }}
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-node-${{ env.PACKAGE_LOCK_FILE_HASH }}-${{ env.PACKAGE_LOCK_FILE_HASH }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.PACKAGE_LOCK_FILE_HASH }}-

    - name: Install Dependencies
      shell: bash
      run: npm install --legacy-peer-deps && rm -f node_modules/.package-lock.json
      env:
        NODE_AUTH_TOKEN: ${{ inputs.token }}

    - name: Run Lint
      shell: bash
      run: npm run lint

    - name: Build with NPM
      shell: bash
      run: npm run build

    - name: Build Storybook
      if: ${{ inputs.with-storybook == 'true' }}
      shell: bash
      run: npm run build-storybook

    - name: Create Sentry release
      uses: getsentry/action-release@v1
      if: ${{ inputs.sentry-token != '' }}
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry-token }}
        SENTRY_ORG: ${{ inputs.sentry-org }}
        SENTRY_PROJECT: ${{ inputs.sentry-project }}
      with:
        version: ${{ github.ref_name }}
        sourcemaps: .next
        ignore_missing: "true"
        ignore_empty: "true"
