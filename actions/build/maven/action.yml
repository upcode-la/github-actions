name: "Build with Maven"
inputs:
  settings-url:
    description: "URL to settings.xml file"
    required: false
  token:
    description: "Github Token"
    required: false
  comment-pr-with-coverage:
    description: "true | false"
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up JDK 1.11
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "11"

    - name: Hash Pom
      shell: bash
      run: echo "POM_FILE_HASH=$(tail -n +10 pom.xml | sha1sum | head -c 40)" >> $GITHUB_ENV

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ env.POM_FILE_HASH }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up settings
      if: ${{inputs.settings-url != ''}}
      shell: bash
      run: |
        curl -o ~/.m2/settings.xml -L https://${{inputs.token}}@${{inputs.settings-url}}
        sed -i "s/MAVEN_USER/$GITHUB_ACTOR/" ~/.m2/settings.xml
        sed -i "s/MAVEN_TOKEN/${{inputs.token}}/" ~/.m2/settings.xml

    - name: Maven Validate
      shell: bash
      run: mvn validate --file pom.xml

    - name: Maven Compile
      shell: bash
      run: mvn -B compile --file pom.xml

    - name: Maven Test
      shell: bash
      run: mvn -B test --file pom.xml

    - name: Generate JaCoCo badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        generate-summary: true

    - uses: actions/checkout@v3
      if: ${{ github.event_name != 'pull_request' }}
      name: Checkout prepare push coverage badges
      with:
        ref: ${{ github.ref_name }}
        token: ${{ inputs.token }}
        clean: "false"

    - name: Commit and push the coverage badges and summary file
      shell: bash
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        if [[ `git status --porcelain *.svg *.json` ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add *.svg *.json
          git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
          git push
        fi

    - name: Comment on PR with coverage percentages
      shell: bash
      if: ${{ github.event_name == 'pull_request' && inputs.comment-pr-with-coverage == 'true' }}
      run: |
        REPORT=$(<.github/badges/coverage-summary.json)
        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
        NEWLINE=$'\n'
        BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
        gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: JaCoCo Code Coverage Report
      uses: PavanMudigonda/jacoco-reporter@v5.0
      with:
        coverage_results_path: target/site/jacoco/jacoco.xml
        coverage_report_name: "Test coverage results"
        coverage_report_title: "Test coverage results"
        github_token: ${{ inputs.token }}
        skip_check_run: true
        minimum_coverage: 90
        fail_below_threshold: false
        publish_only_summary: true

    - name: Maven Package
      shell: bash
      run: mvn -B package -Dmaven.test.skip --file pom.xml
